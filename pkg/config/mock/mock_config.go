// Code generated by MockGen. DO NOT EDIT.
// Source: ./pkg/config/config.go

// Package mock_config is a generated GoMock package.
package mock_config

import (
	reflect "reflect"
	config "service_history/pkg/config"

	gomock "github.com/golang/mock/gomock"
)

// MockIConfig is a mock of IConfig interface.
type MockIConfig struct {
	ctrl     *gomock.Controller
	recorder *MockIConfigMockRecorder
}

// MockIConfigMockRecorder is the mock recorder for MockIConfig.
type MockIConfigMockRecorder struct {
	mock *MockIConfig
}

// NewMockIConfig creates a new mock instance.
func NewMockIConfig(ctrl *gomock.Controller) *MockIConfig {
	mock := &MockIConfig{ctrl: ctrl}
	mock.recorder = &MockIConfigMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIConfig) EXPECT() *MockIConfigMockRecorder {
	return m.recorder
}

// GetPeriod mocks base method.
func (m *MockIConfig) GetPeriod() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPeriod")
	ret0, _ := ret[0].(int)
	return ret0
}

// GetPeriod indicates an expected call of GetPeriod.
func (mr *MockIConfigMockRecorder) GetPeriod() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPeriod", reflect.TypeOf((*MockIConfig)(nil).GetPeriod))
}

// GetPort mocks base method.
func (m *MockIConfig) GetPort() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPort")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetPort indicates an expected call of GetPort.
func (mr *MockIConfigMockRecorder) GetPort() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPort", reflect.TypeOf((*MockIConfig)(nil).GetPort))
}

// GetSQL mocks base method.
func (m *MockIConfig) GetSQL() *config.SQL {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSQL")
	ret0, _ := ret[0].(*config.SQL)
	return ret0
}

// GetSQL indicates an expected call of GetSQL.
func (mr *MockIConfigMockRecorder) GetSQL() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSQL", reflect.TypeOf((*MockIConfig)(nil).GetSQL))
}
